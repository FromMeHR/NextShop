version: '3.9'

services:
  db:
    image: postgres:16
    container_name: db
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - shop_net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin/data
    depends_on:
      - db
    networks:
      - shop_net

  back:
    build:
      context: .
      dockerfile: Dockerfile.back
    container_name: back
    restart: on-failure
    command: gunicorn --log-level debug shop.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - media:/shop/app/public/media
      - static:/shop/app/public/static
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - shop_net

  front:
    build:
      context: .
      dockerfile: Dockerfile.front
    container_name: front
    env_file:
      - ./frontend/.env
    networks:
      - shop_net

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx-proxy
    container_name: nginx
    volumes:
      - media:/shop/app/public/media
      - static:/shop/app/public/static
    depends_on:
      - back
      - front
    ports:
      - "80:80"
    networks:
      - shop_net

  redis:
    image: redis:7
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - shop_net

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.back
    container_name: celery_worker
    command: ["celery", "-A", "shop", "worker", "-l", "INFO"]
    volumes:
      - media:/shop/app/public/media
      - static:/shop/app/public/static
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - shop_net

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.back
    container_name: celery_beat
    command: ["celery", "-A", "shop", "beat", "-l", "INFO"]
    volumes:
      - media:/shop/app/public/media
      - static:/shop/app/public/static
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - shop_net

networks:
  shop_net:
    name: shop_net
volumes:
  db_data:
  pgadmin_data:
  static:
  media:
  redis_data: