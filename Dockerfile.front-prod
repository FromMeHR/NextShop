FROM node:24-alpine AS base

FROM base AS builder
RUN apk add --no-cache libc6-compat
WORKDIR /app

COPY ./frontend/package.json ./frontend/package-lock.json* ./frontend/yarn.lock* ./frontend/pnpm-lock.yaml* ./frontend/.npmrc* ./
RUN \
  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
  elif [ -f package-lock.json ]; then npm ci; \
  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm i --frozen-lockfile; \
  else echo "Lockfile not found." && exit 1; \
  fi

COPY ./frontend/src ./src
COPY ./frontend/public ./public
COPY ./frontend/cache-handler.mjs .
COPY ./frontend/eslint.config.mjs .
COPY ./frontend/jsconfig.json .
COPY ./frontend/next.config.mjs .

# Environment variables must be present at build time
ARG BASE_INTERNAL_API_URL
ARG NEXT_PUBLIC_BASE_API_URL
ARG NEXT_PUBLIC_URL
ARG REDIS_URL
ARG REDIS_SINGLE_CONNECTION

ENV BASE_INTERNAL_API_URL=$BASE_INTERNAL_API_URL
ENV NEXT_PUBLIC_BASE_API_URL=$NEXT_PUBLIC_BASE_API_URL
ENV NEXT_PUBLIC_URL=$NEXT_PUBLIC_URL
ENV REDIS_URL=$REDIS_URL
ENV REDIS_SINGLE_CONNECTION=$REDIS_SINGLE_CONNECTION

ENV NEXT_TELEMETRY_DISABLED=1
RUN \
  if [ -f yarn.lock ]; then yarn run build; \
  elif [ -f package-lock.json ]; then npm run build; \
  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm run build; \
  else echo "Lockfile not found." && exit 1; \
  fi

FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
USER nextjs

COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# Environment variables must be redefined at run time
ARG BASE_INTERNAL_API_URL
ARG NEXT_PUBLIC_BASE_API_URL
ARG NEXT_PUBLIC_URL
ARG REDIS_URL
ARG REDIS_SINGLE_CONNECTION

ENV BASE_INTERNAL_API_URL=$BASE_INTERNAL_API_URL
ENV NEXT_PUBLIC_BASE_API_URL=$NEXT_PUBLIC_BASE_API_URL
ENV NEXT_PUBLIC_URL=$NEXT_PUBLIC_URL
ENV REDIS_URL=$REDIS_URL
ENV REDIS_SINGLE_CONNECTION=$REDIS_SINGLE_CONNECTION

EXPOSE 3000
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"
CMD ["node", "server.js"]